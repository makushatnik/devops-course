---
- name: Deploy Telegram's Bot Application to AWS
  hosts: aws-server

  vars:
    home: /home/ec2-user
    binDir: /usr/bin/chatbot

  tasks:
# Install libraries.
  - name: Install Go
    yum:  name=golang state=latest
    become: yes

  - name: Existence of Telegram library stat
    stat: path="{{home}}/go/pkg/linux_amd64/github.com/go-telegram-bot-api"
    register: telegram_stat

  - name: Download Telegram library
    command: go get github.com/go-telegram-bot-api/telegram-bot-api
    when: not telegram_stat.stat.exists

# Making directories.
  - name: Make Project Dir
    file:
      path: "{{home}}/go/src/chatbot"
      state: directory

  - name: Make Log Dir
    file:
      path: "/var/log/chatbot"
      state: directory
    become: yes

  - name: Make Dir for builded files
    file:
      path: "{{binDir}}"
      state: directory
    become: yes

  - name: Set GOPATH
    lineinfile:
      path: "{{home}}/.bash_profile"
      state: present
      line: export GOPATH="{{home}}/go"

# Copying files.
  - name: Copy Source Files to the project Dir
    copy:
      src: "{{item}}"
      dest: "{{home}}/go/src/chatbot"
      mode: 0774
    with_items:
      ['chatbot.go','concat.go','config.go','logger.go']
    notify: Go Build

  - name: Copy Config to the bin Dir
    copy:
      src: config.json
      dest: "{{binDir}}"
      mode: 0755
    become: yes

  - name: Copy service's Settings file
    copy:
      src: chatbot.service
      dest: /etc/systemd/system
      mode: 0755
    become: yes
    notify: Reload App

  - name: Check existence of a binary file in a Bin Dir
    stat: path="{{binDir}}/chatbot"
    register: bin_stat

  - name: Go Build Task
    command: go build chatbot
    when: not bin_stat.stat.exists

  - name: Chatbot stat
    stat: path="{{home}}/chatbot"
    register: bot_stat

  - name: Move builded Chatbot file to a bin Dir
    command: mv "{{home}}/chatbot" "{{binDir}}"
    become: yes
    when: bot_stat.stat.exists
    notify: Start App

  handlers:
  - name: Go Build
    command: go build chatbot

  - name: Reload App
    service: name=chatbot state=reloaded
    become: yes

  - name: Start App
    service:
      name: chatbot
      state: restarted
      enabled: yes
    become: yes

