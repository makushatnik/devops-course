---
- name: Deploy Telegram's Bot Application to AWS
  hosts: aws-server

  vars:
    home: /home/ec2-user

  tasks:
  - name: Install Go
    yum:  name=golang state=latest
    become: yes

  - name: PID stat
    stat: path="{{home}}/save_pid.txt"
    register: pid_stat

  - name: Kill existing Process
    command: "kill -9 `cat {{home}}/save_pid.txt`"
    when: pid_stat.stat.exists
    become: yes

  - name: Delete File with PID
    file:
      path: "{{home}}/save_pid.txt"
      state: absent

  - name: Make Project Dir
    file:
      path: "{{home}}/go/src/chatbot"
      state: directory

  - name: Make Log Dir
    file:
      path: "/var/log/chatbot"
      state: directory
    become: yes

  - name: Make Dir for builded files
    file:
      path: "{{home}}/go/bin"
      state: directory

  - name: Set GOPATH
    lineinfile:
      path: "{{home}}/.bash_profile"
      state: present
      line: export GOPATH="{{home}}/go"

  - name: Move Source Files to the project Dir
    copy:
      src: "{{item}}"
      dest: "{{home}}/go/src/chatbot"
      mode: 0774
    with_items:
      ['chatbot.go','concat.go','config.go','logger.go']

  - name: Move Config to the bin Dir
    copy:
      src: "{{item}}"
      dest: "{{home}}/go/bin"
      mode: 0755
    with_items:
      ['config.json']

  - name: Download Telegram library
    command: go get github.com/go-telegram-bot-api/telegram-bot-api

  - name: Go Build
    command: go build chatbot

  - name: Chatbot stat
    stat: path="{{home}}/chatbot"
    register: bot_stat

  - name: Move builded Chatbot file to a bin Dir
    command: mv "{{home}}/chatbot" "{{home}}/go/bin/chatbot"
    when: bot_stat.stat.exists

  - name: Execute bulded application
    shell: "nohup {{home}}/go/bin/chatbot &"
    become: yes

  - name: Print the PID
    command: "echo $! > {{home}}/save_pid.txt"